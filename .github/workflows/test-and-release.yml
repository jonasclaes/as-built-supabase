name: Test and release

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build
        env:
          CF_PAGES: 1
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SIGNED_URL_JWT_SECRET: ${{ secrets.SIGNED_URL_JWT_SECRET }}
          EMAIL_STRATEGY: ${{ env.EMAIL_STRATEGY }}
          PLUNK_SECRET_API_KEY: ${{ secrets.PLUNK_SECRET_API_KEY }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: .svelte-kit

  component-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Store Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(yarn list --pattern @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers for Playwright version
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: yarn test:components

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  publish:
    permissions:
      contents: read
      deployments: write
    runs-on: ubuntu-latest
    needs:
      - build
      - component-tests
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1.5.0
        with:
          # Cloudflare API Token
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Cloudflare Account ID
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # The name of the Pages project to upload to
          projectName: as-built
          # The directory of static assets to upload
          directory: .svelte-kit/cloudflare
